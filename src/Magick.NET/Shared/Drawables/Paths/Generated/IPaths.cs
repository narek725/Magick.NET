// Copyright 2013-2020 Dirk Lemstra <https://github.com/dlemstra/Magick.NET/>
//
// Licensed under the ImageMagick License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the License at
//
//   https://www.imagemagick.org/script/license.php
//
// Unless required by applicable law or agreed to in writing, software distributed under the
// License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied. See the License for the specific language governing permissions
// and limitations under the License.
// <auto-generated/>

using System.Collections.Generic;

namespace ImageMagick
{
    [System.CodeDom.Compiler.GeneratedCode("Magick.NET.FileGenerator", "")]
    public partial interface IPaths
    {
        /// <summary>
        /// Applies the PathArcAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinates">The coordinates to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths ArcAbs(params PathArc[] coordinates);

        /// <summary>
        /// Applies the PathArcAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinates">The coordinates to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths ArcAbs(IEnumerable<PathArc> coordinates);

        /// <summary>
        /// Applies the PathArcRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinates">The coordinates to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths ArcRel(params PathArc[] coordinates);

        /// <summary>
        /// Applies the PathArcRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinates">The coordinates to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths ArcRel(IEnumerable<PathArc> coordinates);

        /// <summary>
        /// Applies the PathClose operation to the <see cref="IPaths" />.
        /// </summary>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths Close();

        /// <summary>
        /// Applies the PathCurveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="controlPointStart">Coordinate of control point for curve beginning.</param>
        /// <param name="controlPointEnd">Coordinate of control point for curve ending.</param>
        /// <param name="end">Coordinate of the end of the curve.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths CurveToAbs(PointD controlPointStart, PointD controlPointEnd, PointD end);

        /// <summary>
        /// Applies the PathCurveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x1">X coordinate of control point for curve beginning.</param>
        /// <param name="y1">Y coordinate of control point for curve beginning.</param>
        /// <param name="x2">X coordinate of control point for curve ending.</param>
        /// <param name="y2">Y coordinate of control point for curve ending.</param>
        /// <param name="x">X coordinate of the end of the curve.</param>
        /// <param name="y">Y coordinate of the end of the curve.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths CurveToAbs(double x1, double y1, double x2, double y2, double x, double y);

        /// <summary>
        /// Applies the PathCurveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="controlPointStart">Coordinate of control point for curve beginning.</param>
        /// <param name="controlPointEnd">Coordinate of control point for curve ending.</param>
        /// <param name="end">Coordinate of the end of the curve.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths CurveToRel(PointD controlPointStart, PointD controlPointEnd, PointD end);

        /// <summary>
        /// Applies the PathCurveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x1">X coordinate of control point for curve beginning.</param>
        /// <param name="y1">Y coordinate of control point for curve beginning.</param>
        /// <param name="x2">X coordinate of control point for curve ending.</param>
        /// <param name="y2">Y coordinate of control point for curve ending.</param>
        /// <param name="x">X coordinate of the end of the curve.</param>
        /// <param name="y">Y coordinate of the end of the curve.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths CurveToRel(double x1, double y1, double x2, double y2, double x, double y);

        /// <summary>
        /// Applies the PathLineToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinates">The coordinates to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToAbs(params PointD[] coordinates);

        /// <summary>
        /// Applies the PathLineToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinates">The coordinates to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToAbs(IEnumerable<PointD> coordinates);

        /// <summary>
        /// Applies the PathLineToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x">The X coordinate.</param>
        /// <param name="y">The Y coordinate.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToAbs(double x, double y);

        /// <summary>
        /// Applies the PathLineToHorizontalAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x">The X coordinate.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToHorizontalAbs(double x);

        /// <summary>
        /// Applies the PathLineToHorizontalRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x">The X coordinate.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToHorizontalRel(double x);

        /// <summary>
        /// Applies the PathLineToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinates">The coordinates to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToRel(params PointD[] coordinates);

        /// <summary>
        /// Applies the PathLineToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinates">The coordinates to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToRel(IEnumerable<PointD> coordinates);

        /// <summary>
        /// Applies the PathLineToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x">The X coordinate.</param>
        /// <param name="y">The Y coordinate.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToRel(double x, double y);

        /// <summary>
        /// Applies the PathLineToVerticalAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="y">The Y coordinate.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToVerticalAbs(double y);

        /// <summary>
        /// Applies the PathLineToVerticalRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="y">The Y coordinate.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths LineToVerticalRel(double y);

        /// <summary>
        /// Applies the PathMoveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinate">The coordinate to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths MoveToAbs(PointD coordinate);

        /// <summary>
        /// Applies the PathMoveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x">The X coordinate.</param>
        /// <param name="y">The Y coordinate.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths MoveToAbs(double x, double y);

        /// <summary>
        /// Applies the PathMoveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="coordinate">The coordinate to use.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths MoveToRel(PointD coordinate);

        /// <summary>
        /// Applies the PathMoveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x">The X coordinate.</param>
        /// <param name="y">The Y coordinate.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths MoveToRel(double x, double y);

        /// <summary>
        /// Applies the PathQuadraticCurveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="controlPoint">Coordinate of control point.</param>
        /// <param name="end">Coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths QuadraticCurveToAbs(PointD controlPoint, PointD end);

        /// <summary>
        /// Applies the PathQuadraticCurveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x1">X coordinate of control point.</param>
        /// <param name="y1">Y coordinate of control point.</param>
        /// <param name="x">X coordinate of final point.</param>
        /// <param name="y">Y coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths QuadraticCurveToAbs(double x1, double y1, double x, double y);

        /// <summary>
        /// Applies the PathQuadraticCurveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="controlPoint">Coordinate of control point.</param>
        /// <param name="end">Coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths QuadraticCurveToRel(PointD controlPoint, PointD end);

        /// <summary>
        /// Applies the PathQuadraticCurveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x1">X coordinate of control point.</param>
        /// <param name="y1">Y coordinate of control point.</param>
        /// <param name="x">X coordinate of final point.</param>
        /// <param name="y">Y coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths QuadraticCurveToRel(double x1, double y1, double x, double y);

        /// <summary>
        /// Applies the PathSmoothCurveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="controlPoint">Coordinate of second point.</param>
        /// <param name="end">Coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths SmoothCurveToAbs(PointD controlPoint, PointD end);

        /// <summary>
        /// Applies the PathSmoothCurveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x2">X coordinate of second point.</param>
        /// <param name="y2">Y coordinate of second point.</param>
        /// <param name="x">X coordinate of final point.</param>
        /// <param name="y">Y coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths SmoothCurveToAbs(double x2, double y2, double x, double y);

        /// <summary>
        /// Applies the PathSmoothCurveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="controlPoint">Coordinate of second point.</param>
        /// <param name="end">Coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths SmoothCurveToRel(PointD controlPoint, PointD end);

        /// <summary>
        /// Applies the PathSmoothCurveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x2">X coordinate of second point.</param>
        /// <param name="y2">Y coordinate of second point.</param>
        /// <param name="x">X coordinate of final point.</param>
        /// <param name="y">Y coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths SmoothCurveToRel(double x2, double y2, double x, double y);

        /// <summary>
        /// Applies the PathSmoothQuadraticCurveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="end">Coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths SmoothQuadraticCurveToAbs(PointD end);

        /// <summary>
        /// Applies the PathSmoothQuadraticCurveToAbs operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x">X coordinate of final point.</param>
        /// <param name="y">Y coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths SmoothQuadraticCurveToAbs(double x, double y);

        /// <summary>
        /// Applies the PathSmoothQuadraticCurveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="end">Coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths SmoothQuadraticCurveToRel(PointD end);

        /// <summary>
        /// Applies the PathSmoothQuadraticCurveToRel operation to the <see cref="IPaths" />.
        /// </summary>
        /// <param name="x">X coordinate of final point.</param>
        /// <param name="y">Y coordinate of final point.</param>
        /// <returns>The <see cref="IPaths" /> instance.</returns>
        IPaths SmoothQuadraticCurveToRel(double x, double y);

    }
}
